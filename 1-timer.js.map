{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst timerInput = document.getElementById('datetime-picker');\nconst dataDays = document.querySelectorAll('[data-days]');\nconst dataHours = document.querySelectorAll('[data-hours]');\nconst dataMinutes = document.querySelectorAll('[data-minutes]');\nconst dataSeconds = document.querySelectorAll('[data-seconds]');\nconst btnStart = document.querySelector('[data-start]');\n\nbtnStart.disabled = true;\n\nlet userSelectedDate = [];\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const nowDate = new Date();\n    const chosenDate = selectedDates[0];\n    if (chosenDate > nowDate) {\n      btnStart.disabled = false;\n      userSelectedDate = chosenDate;\n    } else {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        backgroundColor: 'rgb(255, 215, 163)',\n      });\n      btnStart.disabled = true;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nbtnStart.addEventListener('click', () => {\n  const chosenDate = userSelectedDate;\n  btnStart.disabled = true;\n  timerInput.disabled = true;\n\n  const intervalId = setInterval(() => {\n    const nowDate = new Date();\n    const diff = chosenDate - nowDate;\n\n    if (diff <= 0) {\n      clearInterval(intervalId);\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(diff);\n\n    function addLeadingZero(value) {\n      return String(value).padStart(2, '0');\n    }\n\n    dataDays[0].textContent = addLeadingZero(days);\n    dataHours[0].textContent = addLeadingZero(hours);\n    dataMinutes[0].textContent = addLeadingZero(minutes);\n    dataSeconds[0].textContent = addLeadingZero(seconds);\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["timerInput","dataDays","dataHours","dataMinutes","dataSeconds","btnStart","userSelectedDate","options","selectedDates","nowDate","chosenDate","iziToast","flatpickr","intervalId","diff","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"+IAKA,MAAMA,EAAa,SAAS,eAAe,iBAAiB,EACtDC,EAAW,SAAS,iBAAiB,aAAa,EAClDC,EAAY,SAAS,iBAAiB,cAAc,EACpDC,EAAc,SAAS,iBAAiB,gBAAgB,EACxDC,EAAc,SAAS,iBAAiB,gBAAgB,EACxDC,EAAW,SAAS,cAAc,cAAc,EAEtDA,EAAS,SAAW,GAEpB,IAAIC,EAAmB,CAAA,EAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAU,IAAI,KACdC,EAAaF,EAAc,CAAC,EAC9BE,EAAaD,GACfJ,EAAS,SAAW,GACpBC,EAAmBI,IAEnBC,EAAS,KAAK,CACZ,QAAS,qCACT,SAAU,WACV,gBAAiB,oBACzB,CAAO,EACDN,EAAS,SAAW,GAEvB,CACH,EAEAO,EAAU,mBAAoBL,CAAO,EAErCF,EAAS,iBAAiB,QAAS,IAAM,CACvC,MAAMK,EAAaJ,EACnBD,EAAS,SAAW,GACpBL,EAAW,SAAW,GAEtB,MAAMa,EAAa,YAAY,IAAM,CAEnC,MAAMC,EAAOJ,EADG,IAAI,KAGpB,GAAII,GAAQ,EAAG,CACb,cAAcD,CAAU,EACxB,MACD,CAED,KAAM,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EAExD,SAASM,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CAEDpB,EAAS,CAAC,EAAE,YAAcmB,EAAeL,CAAI,EAC7Cb,EAAU,CAAC,EAAE,YAAckB,EAAeJ,CAAK,EAC/Cb,EAAY,CAAC,EAAE,YAAciB,EAAeH,CAAO,EACnDb,EAAY,CAAC,EAAE,YAAcgB,EAAeF,CAAO,CACpD,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUG,EAAI,CAMrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EACjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}